@model IEnumerable<Pildipank_ver2.Models.Picture>
@using Pildipank_ver2.Models
@*@{
    ViewBag.Title = "IndexUser";
}

<h2>IndexUser</h2>*@
<p>
    <br />
   <h4>@Html.ActionLink("Create New Picture", "Create")</h4>
</p>

<form method="post" id="thisform">
    @Html.DropDownList("CategoryId", (SelectList)ViewBag.CategoryId, "--select category--", htmlAttributes: new
    {
        @class = "form-inline",
        onchange = "this.form.submit();"
    })
    @Html.DropDownList("AlbumId", (SelectList)ViewBag.AlbumId, "--select album--", htmlAttributes: new
    {
        @class = "form-inline",
        onchange = "this.form.submit();"
    })

    <input type="hidden" name="sortKey" id="sortKey" value="@ViewBag.SortKey" />
    <input type="hidden" name="sortDirection" id="sortDirection" value="@ViewBag.SortDirection" />
    <input type="text" name="searchString" placeholder="search..." value="@ViewBag.SearchString" />
    <button type="submit"><span class="glyphicon glyphicon-search"></span></button>

    <table class="table">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Name)*@
                Picture Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Created)*@
                @Html.ActionLink("Created", "IndexUser", new { sortKey = "Created", sortDirection = ((ViewBag.SortKey == "Created" && ViewBag.SortDirection == "Asc") ? "Desc" : "Asc") })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Visibility)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Album.Name)*@
                Album Name
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.AspNetUser.Email)
                </th>*@
            <th>
                @*@Html.DisplayNameFor(model => model.DataFile.Name)*@
                Picture Preview
            </th>
            <th>
                @Html.ActionLink("Most Liked", "IndexUser", new { sortKey = "MostLiked", sortDirection = ((ViewBag.SortKey == "MostLiked" && ViewBag.SortDirection == "Desc") ? "Asc" : "Desc") })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Category.Name)*@
                Category
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Visibility)*@
                    @if (item.Visibility == true)
                    {<p>Visible</p> }
                    else
                    { <p>Not visible</p>}

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Album.Name)

                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.AspNetUser.FullName)
                    </td>*@
                <td>
                    @*@Html.DisplayFor(modelItem => item.DataFile.Name)*@
                    <a href="@Url.Action("Details", "Pictures", new { id = item.Id })">
                        <img height="150" src="@Url.Action("Content", "Datafiles", new { id= item.FileId })" class="@(item.Album.CoverPictureId==item.Id?"img-thumbnail":"")" />
                    </a>
                    @*@if (CoverPictureId == PictureId)
                                {
                                <p>Cover Picture</p>
                                <span class="glyphicon glyphicon-ok"></span>
                        }*@
                </td>
                <td>
                    <span class="glyphicon glyphicon-heart"></span> <span class="badge badge-success"> @item.Likes.Count()</span>
                    <br />
                    <span class="glyphicon glyphicon-comment"></span> <span class="badge badge-success"> @item.Comments.Count()</span>

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                    @Html.ActionLink("Cover", "SetCoverPicture", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
</form>
